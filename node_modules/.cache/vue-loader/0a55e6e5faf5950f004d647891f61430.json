{"remainingRequest":"/Users/adrianchan/Desktop/Code/Vue/vue-project-2021/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/adrianchan/Desktop/Code/Vue/vue-project-2021/src/views/Home.vue?vue&type=template&id=fae5bece","dependencies":[{"path":"/Users/adrianchan/Desktop/Code/Vue/vue-project-2021/src/views/Home.vue","mtime":1615279760554},{"path":"/Users/adrianchan/Desktop/Code/Vue/vue-project-2021/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/adrianchan/Desktop/Code/Vue/vue-project-2021/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/adrianchan/Desktop/Code/Vue/vue-project-2021/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/adrianchan/Desktop/Code/Vue/vue-project-2021/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/adrianchan/Desktop/Code/Vue/vue-project-2021/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdiB2LWlmPSJzaG93QWRkVGFzayI+CiAgICA8QWRkVGFzayBAYWRkLXRhc2s9ImFkZFRhc2siIC8+CiAgPC9kaXY+CiAgPFRhc2tzCiAgICBAdG9nZ2xlLXJlbWluZGVyPSJ0b2dnbGVSZW1pbmRlciIKICAgIEBkZWxldGUtdGFzaz0iZGVsZXRlVGFzayIKICAgIDp0YXNrcz0idGFza3MiCiAgLz4K"},{"version":3,"sources":["/Users/adrianchan/Desktop/Code/Vue/vue-project-2021/src/views/Home.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;EAChC,CAAC,CAAC,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,CAAC,CAAC,CAAC;IACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACf,CAAC","file":"/Users/adrianchan/Desktop/Code/Vue/vue-project-2021/src/views/Home.vue","sourceRoot":"","sourcesContent":["<template>\n  <div v-if=\"showAddTask\">\n    <AddTask @add-task=\"addTask\" />\n  </div>\n  <Tasks\n    @toggle-reminder=\"toggleReminder\"\n    @delete-task=\"deleteTask\"\n    :tasks=\"tasks\"\n  />\n</template>\n\n<script>\nimport Tasks from \"../components/Tasks\";\nimport AddTask from \"../components/AddTask\";\n\nexport default {\n  name: \"Home\",\n  components: {\n    Tasks,\n    AddTask,\n  },\n  data() {\n    return {\n        tasks: []\n    }\n  },\n  methods: {\n    async addTask(task) {\n      const res = await fetch(\"api/tasks\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify(task),\n      });\n\n      const data = await res.json();\n\n      this.tasks = [...this.tasks, data];\n    },\n    async deleteTask(id) {\n      if (confirm(\"Are you sure want to delete this task?\")) {\n        const res = await fetch(`api/tasks/${id}`, {\n          method: \"DELETE\",\n        });\n\n        res.status === 200\n          ? (this.tasks = this.tasks.filter((task) => task.id !== id))\n          : alert(\"Error deleting task\");\n      }\n    },\n    async toggleReminder(id) {\n      const taskToToggle = await this.fetchTask(id);\n      const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder };\n\n      const res = await fetch(`api/tasks/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify(updTask),\n      });\n\n      const data = await res.json();\n\n      console.log(data);\n\n      this.tasks = this.tasks.map((task) =>\n        task.id === id ? { ...task, reminder: data } : task\n      );\n    },\n    async fetchTasks() {\n      const res = await fetch(\"api/tasks\");\n\n      const data = await res.json();\n\n      return data;\n    },\n    async fetchTask(id) {\n      const res = await fetch(`api/tasks/${id}`);\n\n      const data = await res.json();\n\n      return data;\n    },\n  },\n  async created() {\n    this.tasks = await this.fetchTasks();\n  },\n};\n</script>"]}]}
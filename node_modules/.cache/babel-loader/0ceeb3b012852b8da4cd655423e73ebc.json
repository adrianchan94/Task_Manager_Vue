{"remainingRequest":"/Users/adrianchan/Desktop/Code/Vue/vue-project-2021/node_modules/babel-loader/lib/index.js!/Users/adrianchan/Desktop/Code/Vue/vue-project-2021/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/adrianchan/Desktop/Code/Vue/vue-project-2021/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/adrianchan/Desktop/Code/Vue/vue-project-2021/src/App.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/adrianchan/Desktop/Code/Vue/vue-project-2021/src/App.vue","mtime":1615276018956},{"path":"/Users/adrianchan/Desktop/Code/Vue/vue-project-2021/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/adrianchan/Desktop/Code/Vue/vue-project-2021/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/adrianchan/Desktop/Code/Vue/vue-project-2021/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/adrianchan/Desktop/Code/Vue/vue-project-2021/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/adrianchan/Desktop/Code/Vue/vue-project-2021/src/App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"container\">\n    <Header @toggle-add-task=\"toggleAddTask\" title=\"Task Tracker\"\n    :showAddTask=\"showAddTask\"\n    />\n    <div v-if=\"showAddTask\">\n    <AddTask @add-task=\"addTask\"/>\n    </div>\n    <Tasks @toggle-reminder=\"toggleReminder\" @delete-task=\"deleteTask\" :tasks=\"tasks\"/>\n  </div>\n</template>\n\n<script>\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nexport default {\n  name: 'App',\n  components: {\n    Header,\n    Tasks,\n    AddTask\n  },\n  data() {\n    return  {\n      tasks: [],\n      showAddTask: false\n    }\n  },\n  methods : {\n    async addTask(task){\n      const res = await fetch('api/tasks', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n        },\n         body: JSON.stringify(task)\n      })\n\n      const data = await res.json()\n\n      this.tasks = [...this.tasks, data]\n    },\n    async deleteTask(id) {\n      if(confirm('Are you sure want to delete this task?')) {\n        const res = await fetch(`api/tasks/${id}`, {\n          method: 'DELETE',\n        })\n\n        res.status === 200 ? (this.tasks = this.tasks.filter((task) => task.id !== id )) : alert('Error deleting task')\n      }\n    },\n    async toggleReminder(id) {\n      const taskToToggle = await this.fetchTask(id)\n      const updTask = {...taskToToggle, reminder: !taskToToggle.reminder}\n\n      const res = await fetch(`api/tasks/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(updTask)\n      })\n\n      const data = await res.json()\n\n      console.log(data)\n\n      this.tasks = this.tasks.map((task) => task.id === id ? {...task, reminder: data} : task )\n    },\n    toggleAddTask(){\n      this.showAddTask = !this.showAddTask\n    },\n    async fetchTasks(){\n        const res = await fetch('api/tasks')\n\n        const data = await res.json();\n\n        return data\n    },\n      async fetchTask(id){\n        const res = await fetch(`api/tasks/${id}`)\n\n        const data = await res.json();\n\n        return data\n    },\n\n  },\n  async created() {\n    this.tasks = await this.fetchTasks()\n  }\n}\n</script>\n\n<style>\n@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400&display=swap');\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\nbody {\n  font-family: 'Poppins', sans-serif;\n}\n.container {\n  max-width: 500px;\n  margin: 30px auto;\n  overflow: auto;\n  min-height: 300px;\n  border: 1px solid steelblue;\n  padding: 30px;\n  border-radius: 5px;\n}\n.btn {\n  display: inline-block;\n  background: #000;\n  color: #fff;\n  border: none;\n  padding: 10px 20px;\n  margin: 5px;\n  border-radius: 5px;\n  cursor: pointer;\n  text-decoration: none;\n  font-size: 15px;\n  font-family: inherit;\n}\n.btn:focus {\n  outline: none;\n}\n.btn:active {\n  transform: scale(0.98);\n}\n.btn-block {\n  display: block;\n  width: 100%;\n}\n</style>\n"],"sourceRoot":""}]}